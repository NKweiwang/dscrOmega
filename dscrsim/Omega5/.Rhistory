MSEmvash[t] = mean((beta-g2$postmean)^2)
}
warnings()
boxplot(MSEash)
boxplot(MSEash,MSEmvash)
library("dscr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
---
---
;
boxplot(MSEash,MSEmvash,main="toplez")
boxplot(MSEash,MSEmvash,main="toeplitz",xlab=c("a","b"))
boxplot(MSEash,MSEmvash,main="toeplitz Covariance",ylab="MSE")
res = cbind(MSEash,MSEmvash)
boxplot(res,main="toeplitz Covariance",ylab="MSE")
par(mfrow=c(2,2), tcl=-0.5, family="serif", mai=c(0.3,0.3,0.3,0.3))
boxplot(res,main="toeplitz Covariance",ylab="MSE")
par(mfrow=c(2,2), tcl=-0.5, family="serif", mai=c(0.35,0.35,0.35,0.35))
boxplot(res,main="toeplitz Covariance",ylab="MSE")
par(mfrow=c(2,2), tcl=-0.5, family="serif", mai=c(0.4,0.4,0.4,0.4))
boxplot(res,main="toeplitz Covariance",ylab="MSE")
boxplot(res,main="toeplitz Covariance",ylab="MSE")
boxplot(res,main="MSE (Toeplitz Covariance)",ylab="MSE")
par(mfrow=c(2,2), tcl=-0.5, family="serif", mai=c(0.6,0.6,0.6,0.6))
boxplot(res,main="MSE (Toeplitz Covariance)",ylab="MSE")
boxplot(res,main="MSE (Toeplitz Covariance)",ylab="MSE")
par(mfrow=c(2,2), tcl=-0.5, family="serif", mai=c(0.6,0.6,0.6,0.6))
boxplot(res,main="MSE (Toeplitz Covariance)",ylab="MSE")
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmat(P,0)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res = cbind(MSEash,MSEmvash)
boxplot(res,main="MSE (Identity Covariance)",ylab="MSE")
res
Sigma=Sigmat(P,0)
Sigma=Sigmab(P,0)
Sigma
Sigma[1:10,1:10]
Sigmab(P,0.5)[1:10,1:10]
Sigmat=function(P,rho){
a=array(rho,dim=c(P,P))
for(i in 1:P){
a[i,abs(1-i)>1]=0
}
diag(a)=1
return(a)
}
Sigmat(P,0.5)[1:10,1:10]
Sigmat=function(P,rho){
l = seq(1:P)
a=array(rho,dim=c(P,P))
for(i in 1:P){
a[i,abs(l-i)>1]=0
}
diag(a)=1
return(a)
}
Sigmat(P,0.5)[1:10,1:10]
Sigmat(P,0)
Sigmat(P,0)[1:10,1:10]
P=1000
K=3
Sigma=Sigmat(P,0)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
mean((beta-g1$PosteriorMean)^2)
mean((beta-g2$postmean)^2)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmat(P,0)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res2 = cbind(MSEash,MSEmvash)
boxplot(res2,main="MSE (Identity Covariance)",ylab="MSE")
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmatp(P,10)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res1 = cbind(MSEash,MSEmvash)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmat(P,0)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res2 = cbind(MSEash,MSEmvash)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmab(P,0.8)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res3 = cbind(MSEash,MSEmvash)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmatr(P,10,0.7)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res4 = cbind(MSEash,MSEmvash)
source('~/HG/mvash/Rcode/mvashsqEM.R')
library(ashr)
library(MASS)
set.seed(100)
Sigmab=function(P,rho){
a=array(0,dim=c(P,P))
for(i in 1:P){
a[i,(i-(-1)^i)]=rho
}
diag(a)=1
return(a)
}
Sigmat=function(P,rho){
l = seq(1:P)
a=array(rho,dim=c(P,P))
for(i in 1:P){
a[i,abs(l-i)>1]=0
}
diag(a)=1
return(a)
}
Sigmatp=function(P,K=10){
a=array(0,dim=c(P,P))
for(i in 1:P){
for(j in 1:P){
if(abs(i-j)<=K){
a[i,j]= 1-abs(i-j)/10
}
}
}
diag(a)=1
return(a)
}
Sigmatr=function(P,K=10,rho){
a=array(0,dim=c(P,P))
for(i in 1:P){
for(j in 1:P){
if(abs(i-j)<=K){
a[i,j]= rho^(abs(i-j))
}
}
}
diag(a)=1
return(a)
}
beta_hat=function(beta,Sigma){
library(MASS)
betahat=mvrnorm(1,beta,Sigma)
return(betahat)
}
betaO=function(P,betapi,betasigma,propt){
idx=rmultinom(P,size=1,prob=betapi)
K=length(betapi)
s=array(0,dim=c(K,K))
diag(s)=betasigma
bnorm=mvrnorm(P,rep(0,K),s)
betaO=apply(bnorm*t(idx),1,sum)
betaO=betaO*rbinom(P,1,propt)
return(betaO)
}
lfsr=function(alpha,mu,s){
P=dim(alpha)[1]
lfsr=rep(NA,P)
for(j in 1:P){
neg=sum(alpha[j,]*pnorm(0,mu[j,],sqrt(s[j,])))
lfsr[j]=neg*(neg<0.5)+(1-neg)*(neg>=0.5)
}
return(lfsr)
}
MSE = function(alpha,mu,beta){
betahat=rowSums(alpha*mu)
mean((beta-betahat)^2)
}
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmatp(P,10)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res1 = cbind(MSEash,MSEmvash)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmat(P,0)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res2 = cbind(MSEash,MSEmvash)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmab(P,0.8)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res3 = cbind(MSEash,MSEmvash)
nsim = 200
MSEash = rep(0,nsim)
MSEmvash = rep(0,nsim)
for(t in 1:nsim){
P=1000
K=3
Sigma=Sigmatr(P,10,0.7)
Omega=solve(Sigma)
betapi=c(1/3,1/3,1/3)
betasigma=c(10,1,0.01)
propt=0.3
beta=betaO(P,betapi,betasigma,propt)
betahat=beta_hat(beta,Sigma)
sebetahat=sqrt(diag(Sigma))
g1=ash(betahat,sebetahat,method="fdr",mixsd=c(0.01,1,10))
sigma_1=c(0.01,1,10)
g2=mvashsqEM(c(1/3,1/3,1/3),Omega,betahat,sigma = sigma_1,SQEMtol=1e-3)
MSEash[t] = mean((beta-g1$PosteriorMean)^2)
MSEmvash[t] = mean((beta-g2$postmean)^2)
}
res4 = cbind(MSEash,MSEmvash)
par(mfrow=c(2,2), tcl=-0.5, family="serif", mai=c(0.6,0.6,0.6,0.6))
boxplot(res1,main="MSE (Toeplitz Covariance)",ylab="MSE")
boxplot(res2,main="MSE (Identity Covariance)",ylab="MSE")
boxplot(res3,main="MSE (2inblock Covariance)",ylab="MSE")
boxplot(res4,main="MSE (Expdecay Covariance)",ylab="MSE")
result = list(res1,res2,res3,res4)
save(result, file = "/Users/weiwang/HG/mvash/Rcode/simulation/200simMSE.Rdata")
library("dscr")
library("flare")
library("glasso")
library("plyr")
library("dplyr")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/datamakers")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/methods")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/score")
setwd("~/HG/dscr_Omega/dscrOmega/dscrsim/Omega5")
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:20)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:20)
addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
addScore(dscr_Omega,name="prediction",score2)
addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/datamakers")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/methods")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/score")
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:20)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:20)
# addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
addScore(dscr_Omega,name="prediction",score2)
addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
library("glasso")
install.packages("glasso")
library("dscr")
library("flare")
library("glasso")
library("plyr")
library("dplyr")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/datamakers")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/methods")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/score")
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:10)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:10)
# addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
addScore(dscr_Omega,name="prediction",score2)
addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
res[[1]]
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:1)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:1)
# addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
addScore(dscr_Omega,name="prediction",score2)
addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
res
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:1)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:1)
# addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
#addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
#addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
#addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
#addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
#addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
#addScore(dscr_Omega,name="prediction",score2)
#addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
res
library("dscr")
library("flare")
library("glasso")
library("plyr")
library("dplyr")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/datamakers")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/methods")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/score")
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:1)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:1)
# addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
#addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
#addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
#addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
#addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
#addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
#addScore(dscr_Omega,name="prediction",score2)
#addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
library("dscr")
library("flare")
library("glasso")
library("plyr")
library("dplyr")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/datamakers")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/methods")
sourceDir("/Users/weiwang/HG/dscr_Omega/dscrOmega/score")
dscr_Omega = new.dsc("dscr_Omega","Omg")
addScenario(dscr_Omega,name="identity",datamaker,args=list(disttype="identity",n=320,P=5),seed=1:100)
addScenario(dscr_Omega,name="toeplitz",datamaker,args=list(disttype="toeplitz",n=320,P=5),seed=1:100)
# addScenario(dscr_Omega,name="lung1_5K",datamaker,args=list(disttype="lung1_5K",n=320,P=5),seed=1:20)
addMethod(dscr_Omega,name="glasso",fn =glasso.wrapper,args=list(rhostart=0.05,rhoend=0.8))
#addMethod(dscr_Omega,name="SFAmix",fn =SFAmix.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="covtr",fn=covtr.wrapper,args=NULL)
addMethod(dscr_Omega,name="invcovX",fn=invcovX.wrapper,args=NULL)
addMethod(dscr_Omega,name="PCS",fn=PCS.wrapper,args=list(K=3))
addMethod(dscr_Omega,name="clime",fn=clime.wrapper,args=NULL)
addMethod(dscr_Omega,name="tiger",fn=tiger.wrapper,args=NULL)
addScore(dscr_Omega,name="likelihood",score1)
addScore(dscr_Omega,name="prediction",score2)
addScore(dscr_Omega,name="Fisher",score3)
res=run_dsc(dscr_Omega)
res
save(res,file="./res_5.Rdata")
load("temp_res.Rdata")
res
res[[1]]
